{
  "<DM>AutomationDriverDefinition": {
    "1": {
      "Name": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "IsTemplate": "No",
      "Type": "General",
      "AutomationProtocol": "MQTT Protocol [A]",
      "ObjectType": "Area"
    },
    "2": {
      "Name": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "IsTemplate": "No",
      "Type": "General",
      "AutomationProtocol": "Rest Server [A]",
      "ObjectType": "Area"
    }
  },
  "AutomationProperty": {
    "1": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "temperature",
      "DevicePropertyId": "plitho/PLitho-Temperature/#",
      "IsReadable": "Yes",
      "IsWritable": "No",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "String",
      "ExtendedData": {
        "identifierType": "None",
        "identifierValue": "",
        "convertIdentifierNonPrintableASCIIChars": "false",
        "qos": "0",
        "retain": "false"
      },
      "IsTemplate": "No"
    },
    "2": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "humidity",
      "DevicePropertyId": "plitho/PLitho-Humidity/#",
      "IsReadable": "Yes",
      "IsWritable": "No",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "String",
      "ExtendedData": {
        "identifierType": "None",
        "identifierValue": "",
        "convertIdentifierNonPrintableASCIIChars": "false",
        "qos": "0",
        "retain": "false"
      },
      "IsTemplate": "No"
    },
    "3": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "device_id",
      "DevicePropertyId": "device_id",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "String",
      "AutomationProtocolDataType": "String",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "4": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "latitude",
      "DevicePropertyId": "location.latitude",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "5": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "longitude",
      "DevicePropertyId": "location.longitude",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "6": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "pm2_5",
      "DevicePropertyId": "readings.pm2_5",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "7": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "pm10",
      "DevicePropertyId": "readings.pm10",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "8": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "co2",
      "DevicePropertyId": "readings.co2",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "9": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "voc",
      "DevicePropertyId": "readings.voc",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Decimal",
      "AutomationProtocolDataType": "Decimal",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": "false"
      },
      "IsTemplate": "No"
    },
    "10": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "raw",
      "DevicePropertyId": "raw",
      "IsReadable": "Yes",
      "IsWritable": "Yes",
      "DataType": "Object",
      "AutomationProtocolDataType": "Object",
      "ExtendedData": {
        "requestComponentType": "Body",
        "fullContent": true
      },
      "IsTemplate": "No"
    }
  },
  "AutomationEvent": {
    "1": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "Clean Room Monitor Temperature",
      "IsEnabled": "Yes",
      "ExtendedData": {
        "triggerMode": "Always",
        "interval": "1000"
      },
      "IsTemplate": "No"
    },
    "2": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "Clean Room Monitor Humidity",
      "IsEnabled": "Yes",
      "ExtendedData": {
        "triggerMode": "Always",
        "interval": "1000"
      },
      "IsTemplate": "No"
    },
    "3": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "Name": "Event Particles",
      "DeviceEventId": "/api/plitho/air-quality",
      "IsEnabled": "Yes",
      "ExtendedData": {
        "requestMethod": "POST",
        "automaticReply": "True",
        "automaticReplyStatusCode": "200",
        "timeout": "60000"
      },
      "IsTemplate": "No"
    }
  },
  "AutomationEventProperties": {
    "1": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Clean Room Monitor Temperature",
      "AutomationProperty": "temperature",
      "Order": "1",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "2": {
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Clean Room Monitor Humidity",
      "AutomationProperty": "humidity",
      "Order": "1",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "3": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "device_id",
      "Order": "1",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "4": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "latitude",
      "Order": "2",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "5": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "longitude",
      "Order": "3",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "6": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "pm2_5",
      "Order": "4",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "7": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "pm10",
      "Order": "5",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "8": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "co2",
      "Order": "6",
      "ExtendedData": {},
      "IsTemplate": "No"
    },
    "9": {
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A.1]",
      "AutomationEvent": "Event Particles",
      "AutomationProperty": "voc",
      "Order": "7",
      "ExtendedData": {},
      "IsTemplate": "No"
    }
  },
  "<DM>AutomationController": {
    "1": {
      "Name": "Photolithography Cleanroom Controller [B.1]",
      "IsTemplate": "No",
      "Type": "General",
      "ControllerPackageVersion": "11.1.2",
      "ObjectType": "Area",
      "TasksPackages": [
        "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
        "@criticalmanufacturing/connect-iot-controller-engine-custom-dataplatform-tasks"
      ],
      "Scope": "ConnectIoT",
      "LinkConnector": "Smooth",
      "LinkRouter": "Normal",
      "TasksLibraryPackages": [
        "@criticalmanufacturing/connect-iot-controller-engine-core-tasks@11.1.2",
        "@criticalmanufacturing/connect-iot-controller-engine-custom-dataplatform-tasks@0.0.0"
      ],
      "DefaultWorkflowType": "DataFlow"
    }
  },
  "AutomationControllerDriverDef": {
    "1": {
      "AutomationController": "Photolithography Cleanroom Controller [B.1]",
      "Name": "MQTT",
      "DisplayName": "MQTT",
      "AutomationDriverDefinition": "MQTT Photolithography Cleanroom Driver Definition [A]",
      "Color": "#fb8989",
      "IsTemplate": "No",
      "Order": "1"
    },
    "2": {
      "AutomationController": "Photolithography Cleanroom Controller [B.1]",
      "Name": "REST",
      "DisplayName": "REST",
      "AutomationDriverDefinition": "REST Photolithography Cleanroom Driver Definition [A]",
      "Color": "#3adcdf",
      "IsTemplate": "No",
      "Order": "2"
    }
  },
  "AutomationControllerWorkflow": {
    "1": {
      "AutomationController": "Photolithography Cleanroom Controller [B.1]",
      "Name": "AutomationWorkflow_936a1360-ae52-46ed-9c3d-c12b1ae4ba69",
      "DisplayName": "Setup",
      "IsFile": "false",
      "Workflow": {
        "tasks": [
          {
            "id": "task_7119",
            "reference": {
              "name": "driverEvent",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "MQTT",
            "settings": {
              "autoEnable": true,
              "event": "OnInitialize",
              "autoSetup": true,
              "___cmf___description": "OnInitialize"
            }
          },
          {
            "id": "task_7120",
            "reference": {
              "name": "equipmentConfig",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "MQTT",
            "settings": {
              "_inputs": [
                {
                  "name": "address",
                  "label": "Address",
                  "defaultValue": "localhost",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "address"
                  },
                  "dataType": "String",
                  "automationDataType": 0,
                  "referenceType": 0,
                  "description": "Address of MQTT broker",
                  "settingKey": "name"
                },
                {
                  "name": "port",
                  "label": "Port",
                  "defaultValue": "1883",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "port"
                  },
                  "dataType": "Integer",
                  "automationDataType": 5,
                  "referenceType": 0,
                  "description": "Port of MQTT broker",
                  "settingKey": "name"
                },
                {
                  "name": "user",
                  "label": "Username",
                  "defaultValue": "",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "user"
                  },
                  "dataType": "String",
                  "automationDataType": 0,
                  "referenceType": 0,
                  "description": "Login User",
                  "settingKey": "name"
                },
                {
                  "name": "password",
                  "label": "Password",
                  "defaultValue": "",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "password"
                  },
                  "dataType": "Password",
                  "automationDataType": 10,
                  "referenceType": 0,
                  "description": "Login Password",
                  "settingKey": "name"
                },
                {
                  "name": "pollInterval",
                  "label": "Poll Interval (ms)",
                  "defaultValue": "2000",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "pollInterval"
                  },
                  "dataType": "Integer",
                  "automationDataType": 5,
                  "referenceType": 0,
                  "description": "Time between variable polling when no change value notification is available. Only used in events. (milliseconds)",
                  "settingKey": "name"
                },
                {
                  "name": "byteOrder",
                  "label": "Byte Order",
                  "defaultValue": "BigEndian",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "byteOrder"
                  },
                  "dataType": "Enum",
                  "automationDataType": 0,
                  "referenceType": 1,
                  "description": "Byte order of the data of the message",
                  "valueReferenceType": 6,
                  "settings": {
                    "enumValues": [
                      "BigEndian",
                      "LittleEndian"
                    ]
                  },
                  "settingKey": "name"
                },
                {
                  "name": "convertNonPrintableASCIICharsOnSend",
                  "label": "Convert Non Printable ASCII Chars on Send:",
                  "defaultValue": "False",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "convertNonPrintableASCIICharsOnSend"
                  },
                  "dataType": "Boolean",
                  "automationDataType": 8,
                  "referenceType": 0,
                  "description": "Does character substitution on values sent. Replaces ASCII name tokens with the correspondent ASCII value.(e.g.: <NUL> to #00, ..., <DEL> to #07, on set values).",
                  "settingKey": "name"
                },
                {
                  "name": "convertNonPrintableASCIICharsOnReceive",
                  "label": "Convert Non Printable ASCII Chars on Receive:",
                  "defaultValue": "False",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "convertNonPrintableASCIICharsOnReceive"
                  },
                  "dataType": "Boolean",
                  "automationDataType": 8,
                  "referenceType": 0,
                  "description": "Does character substitution on values received. Replaces non printable ascii codes to correspondent <NAME>.(e.g.: #00 to <NUL>, #01 to <SOH>,...,#7F to <DEL>)",
                  "settingKey": "name"
                }
              ],
              "connectingTimeout": 30000,
              "setupTimeout": 10000,
              "intervalBeforeReconnect": 5000,
              "heartbeatInterval": 60000,
              "___cmf___name": "Equipment Configuration"
            }
          },
          {
            "id": "task_7121",
            "reference": {
              "name": "driverCommand",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "MQTT",
            "settings": {
              "command": "Connect",
              "___cmf___description": "Connect"
            }
          },
          {
            "id": "task_7122",
            "reference": {
              "name": "driverEvent",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "REST",
            "settings": {
              "autoEnable": true,
              "event": "OnInitialize",
              "autoSetup": true,
              "___cmf___description": "OnInitialize"
            }
          },
          {
            "id": "task_7123",
            "reference": {
              "name": "equipmentConfig",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "REST",
            "settings": {
              "_inputs": [
                {
                  "name": "address",
                  "label": "Address",
                  "defaultValue": "0.0.0.0",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "address"
                  },
                  "dataType": "String",
                  "automationDataType": 0,
                  "referenceType": 0,
                  "description": "Address (Ip) to listen to. Leave empty for all network addresses (0.0.0.0)",
                  "settingKey": "name"
                },
                {
                  "name": "port",
                  "label": "Port",
                  "defaultValue": 5008,
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "port"
                  },
                  "dataType": "Integer",
                  "automationDataType": 5,
                  "referenceType": 0,
                  "description": "Port number the server will be listening. Defaults to 80",
                  "settingKey": "name"
                },
                {
                  "name": "protocol",
                  "label": "Protocol",
                  "defaultValue": "HTTP",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "protocol"
                  },
                  "dataType": "Enum",
                  "automationDataType": 0,
                  "referenceType": 1,
                  "description": "The protocol used for exchanging data",
                  "valueReferenceType": 6,
                  "settings": {
                    "enumValues": [
                      "HTTP",
                      "HTTPS"
                    ]
                  },
                  "settingKey": "name"
                },
                {
                  "name": "certificateAuthority",
                  "label": "Certificate Authority",
                  "defaultValue": "",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "certificateAuthority"
                  },
                  "dataType": "String",
                  "automationDataType": 11,
                  "referenceType": 0,
                  "description": "Certificate Authority - can be either a path to a file or the contents of the file in plain text. Format should be 'pem'. The certificateAuthority property is used to define a set of trusted Certificate Authority (CA) certificates that an application or system uses to verify the authenticity of SSL/TLS certificates presented by servers during secure communication. It serves as a trust anchor, allowing the application to establish the legitimacy of certificates in the trust chain presented by the server.",
                  "settingKey": "name"
                },
                {
                  "name": "certificate",
                  "label": "Certificate",
                  "defaultValue": "",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "certificate"
                  },
                  "dataType": "String",
                  "automationDataType": 11,
                  "referenceType": 0,
                  "description": "Own server certificate - can be either a path to a file or the contents of the file in plain text. Format should be 'pem'.",
                  "settingKey": "name"
                },
                {
                  "name": "key",
                  "label": "key",
                  "defaultValue": "",
                  "parameter": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolParameter, Cmf.Foundation.BusinessObjects",
                    "Name": "key"
                  },
                  "dataType": "String",
                  "automationDataType": 11,
                  "referenceType": 0,
                  "description": "Own server private key - can be either a path to a file or the contents of the file in plain text. Format should be 'pem'.",
                  "settingKey": "name"
                }
              ],
              "connectingTimeout": 30000,
              "setupTimeout": 10000,
              "intervalBeforeReconnect": 5000,
              "heartbeatInterval": 60000,
              "___cmf___name": "Equipment Configuration"
            }
          },
          {
            "id": "task_7124",
            "reference": {
              "name": "driverCommand",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "driver": "REST",
            "settings": {
              "command": "Connect",
              "___cmf___description": "Connect"
            }
          },
          {
            "id": "task_5452",
            "reference": {
              "name": "store",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "settings": {
              "_inputs": [
                {
                  "name": "instance",
                  "identifier": "instance",
                  "valueType": {
                    "name": "Object",
                    "type": 10,
                    "collectionType": 0,
                    "referenceType": null,
                    "referenceTypeName": null,
                    "referenceTypeId": null,
                    "friendlyName": "Type"
                  },
                  "storage": "Temporary",
                  "settingKey": "name",
                  "defaultValue": "instance"
                }
              ],
              "_workingMode": "StoreOnValueChange",
              "___cmf___name": "Store Data",
              "___cmf___description": "Instance"
            }
          },
          {
            "id": "task_5453",
            "reference": {
              "name": "entityInstance",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            },
            "settings": {
              "_attributes": [],
              "_autoActivate": false,
              "loadAllAttributes": false,
              "reloadEveryChange": false,
              "levelsToLoad": 0,
              "retries": 30,
              "sleepBetweenRetries": 1000,
              "entityTypeName": "Area"
            }
          }
        ],
        "converters": [
          {
            "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#anyToAny",
            "reference": {
              "name": "anyToAny",
              "package": {
                "name": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                "version": "11.1.2"
              }
            }
          }
        ],
        "links": [
          {
            "id": "task_7119_success-task_7120_activate",
            "sourceId": "task_7119",
            "targetId": "task_7120",
            "inputName": "activate",
            "outputName": "success"
          },
          {
            "id": "task_7120_success-task_7121_activate",
            "sourceId": "task_7120",
            "targetId": "task_7121",
            "inputName": "activate",
            "outputName": "success"
          },
          {
            "id": "task_7122_success-task_7123_activate",
            "sourceId": "task_7122",
            "targetId": "task_7123",
            "inputName": "activate",
            "outputName": "success"
          },
          {
            "id": "task_7123_success-task_7124_activate",
            "sourceId": "task_7123",
            "targetId": "task_7124",
            "inputName": "activate",
            "outputName": "success"
          },
          {
            "id": "task_5453_instance-task_5452_instance",
            "sourceId": "task_5453",
            "targetId": "task_5452",
            "inputName": "instance",
            "outputName": "instance",
            "converters": [
              {
                "id": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks#anyToAny",
                "params": {}
              }
            ]
          },
          {
            "id": "task_5453_success-task_5452_activate",
            "sourceId": "task_5453",
            "targetId": "task_5452",
            "inputName": "activate",
            "outputName": "success",
            "converters": []
          },
          {
            "id": "58d93a4f-7a0b-47a3-b66a-f5dc6be9eb3e",
            "sourceId": "task_7119",
            "targetId": "task_5453",
            "inputName": "activate",
            "outputName": "success"
          }
        ],
        "$id": "1",
        "layout": {
          "general": {
            "color": null,
            "notes": []
          },
          "drawers": {
            "DIAGRAM": {
              "tasks": {
                "task_7122": {
                  "collapsed": false,
                  "position": {
                    "x": 1600,
                    "y": 100
                  },
                  "outdated": false
                },
                "task_7123": {
                  "collapsed": true,
                  "position": {
                    "x": 2100,
                    "y": 100
                  },
                  "outdated": false
                },
                "task_7119": {
                  "collapsed": false,
                  "position": {
                    "x": 100,
                    "y": 100
                  },
                  "outdated": false
                },
                "task_7121": {
                  "collapsed": false,
                  "position": {
                    "x": 1100,
                    "y": 100
                  },
                  "outdated": false
                },
                "task_5452": {
                  "collapsed": true,
                  "position": {
                    "x": 1063,
                    "y": 406
                  },
                  "outdated": false
                },
                "task_5453": {
                  "collapsed": true,
                  "position": {
                    "x": 538,
                    "y": 405
                  },
                  "outdated": false
                },
                "task_7120": {
                  "collapsed": true,
                  "position": {
                    "x": 600,
                    "y": 100
                  },
                  "outdated": false
                },
                "task_7124": {
                  "collapsed": false,
                  "position": {
                    "x": 2600,
                    "y": 100
                  },
                  "outdated": false
                }
              },
              "links": {
                "task_7119_success-task_7120_activate": {
                  "vertices": []
                },
                "task_7120_success-task_7121_activate": {
                  "vertices": []
                },
                "task_7122_success-task_7123_activate": {
                  "vertices": []
                },
                "task_7123_success-task_7124_activate": {
                  "vertices": []
                },
                "task_5453_success-task_5452_activate": {
                  "vertices": []
                },
                "58d93a4f-7a0b-47a3-b66a-f5dc6be9eb3e": {
                  "vertices": []
                },
                "task_5453_instance-task_5452_instance": {
                  "vertices": []
                }
              },
              "notes": {},
              "pan": {
                "x": 0,
                "y": 64.66666412353516
              },
              "zoom": 1
            }
          }
        }
      },
      "Order": "1",
      "IsTemplate": "No",
      "IsShared": "No",
      "Indentation": "0",
      "WorkflowType": "DataFlow"
    },
    "2": {
      "AutomationController": "Photolithography Cleanroom Controller [B.1]",
      "Name": "AutomationWorkflow_fa1730e6-b3ad-43c9-ab62-c68c4139d13b",
      "DisplayName": "Collect Sensor Data",
      "IsFile": "false",
      "Workflow": {
        "tasks": [
          {
            "id": "1741003210647804",
            "name": "evt_cleanroom_temp",
            "type": {
              "name": "equipmentEvent",
              "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
              "version": "11.1.2"
            },
            "x": 250,
            "y": 150,
            "isCollapsed": false,
            "isDisabled": false,
            "settings": {
              "_autoActivate": true,
              "_customEvents": false,
              "_acceptAllEvents": false,
              "_events": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationEvent, Cmf.Foundation.BusinessObjects",
                  "Name": "Clean Room Monitor Temperature"
                }
              ],
              "_workingMode": "AlwaysActive",
              "_messageFullName": "Clean Room Monitor Temperature",
              "_automationEventProperties": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "temperature"
                }
              ],
              "_outputs": [
                {
                  "name": "temperature",
                  "propertyId": "plitho/PLitho-Temperature/#",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "String"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "temperature",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                }
              ]
            },
            "inputs": [],
            "outputs": [
              {
                "name": "topic",
                "dataType": "String",
                "value": "{{ $this.eventRawData.values[0].originalValue.topic }}"
              },
              {
                "name": "event",
                "value": "{{ $this.event }}",
                "dataType": "Any"
              },
              {
                "name": "timestamp",
                "value": "{{ $this.timestamp }}",
                "dataType": "Any"
              },
              {
                "name": "eventRawData",
                "value": "{{ $this.eventRawData }}",
                "dataType": "Any"
              },
              {
                "name": "temperature",
                "value": "{{ $this.temperature }}",
                "dataType": "Decimal"
              }
            ],
            "driver": "MQTT",
            "caption": "When equipment triggers the event {{_messageFullName}}",
            "branches": [
              {
                "name": "handler",
                "tasks": [
                  {
                    "id": "1741003260688910",
                    "name": "regex_topic_temp",
                    "type": {
                      "name": "expressionEvaluatorRegular",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                      "version": "11.1.2"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "_evaluatorBehavior": "EvaluateAll",
                      "_clearInputs": false,
                      "_inputs": [
                        {
                          "name": "topic",
                          "valueType": "String",
                          "defaultValue": "{{ $evt_cleanroom_temp.topic }}",
                          "required": true,
                          "settingKey": "name"
                        }
                      ],
                      "_outputs": [
                        {
                          "name": "sensor",
                          "valueType": {
                            "name": "String",
                            "type": 4,
                            "collectionType": 0,
                            "referenceType": null,
                            "referenceTypeName": null,
                            "referenceTypeId": null,
                            "friendlyName": "Type"
                          },
                          "expression": "[^/]+$",
                          "settingKey": "name",
                          "__valueType": {
                            "name": "default",
                            "label": "Default value",
                            "settingKey": "defaultValue",
                            "required": true,
                            "condition": "valueType != null and valueType['name'] != null",
                            "dataTypeKey": "valueType",
                            "dataType": "String",
                            "settings": {},
                            "isMandatory": false,
                            "valueType": 4
                          }
                        }
                      ]
                    },
                    "inputs": [
                      {
                        "name": "topic",
                        "value": "{{ $evt_cleanroom_temp.topic }}",
                        "dataType": "String"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "sensor",
                        "value": "{{ $this.sensor }}",
                        "dataType": "String"
                      }
                    ],
                    "caption": "Get everything after the last /",
                    "branches": []
                  },
                  {
                    "id": "1741688673129725",
                    "name": "instance_temp",
                    "type": {
                      "name": "retrieve",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                      "version": "11.1.2"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "_outputs": [
                        {
                          "name": "instance",
                          "identifier": "instance",
                          "valueType": {
                            "collectionType": 0,
                            "type": 10,
                            "name": "Object"
                          },
                          "defaultValue": {},
                          "dataType": "Object",
                          "settingKey": "name",
                          "deviceType": null
                        }
                      ]
                    },
                    "inputs": [],
                    "outputs": [
                      {
                        "name": "instance",
                        "value": "{{ $this.instance }}",
                        "dataType": "Object"
                      }
                    ],
                    "caption": "Retrieve Instance",
                    "branches": []
                  },
                  {
                    "id": "1741109313331903",
                    "name": "postNumericTelemetry_c266",
                    "type": {
                      "name": "postNumericTelemetry",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-custom-dataplatform-tasks",
                      "version": "0.0.0"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "applicationName": "MES",
                      "retries": 30,
                      "numberOfRetries": 30,
                      "ignoreLastServiceId": false,
                      "sleepBetweenRetries": 1000
                    },
                    "inputs": [
                      {
                        "name": "instance",
                        "value": "{{ $instance_temp.instance }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "class",
                        "value": "Sensor",
                        "dataType": "String"
                      },
                      {
                        "name": "unitOfMeasure",
                        "value": "ºC",
                        "dataType": "String"
                      },
                      {
                        "name": "tags",
                        "value": "{{ [{\"Key\": \"Sensor Name\", \"Value\": $regex_topic_temp.sensor }] }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "value",
                        "value": "{{ $evt_cleanroom_temp.temperature }}",
                        "dataType": "Decimal"
                      },
                      {
                        "name": "valueTimestamp",
                        "value": "{{ $evt_cleanroom_temp.timestamp }}",
                        "dataType": "DateTime"
                      },
                      {
                        "name": "parameterName",
                        "value": "Temperature",
                        "dataType": "String"
                      }
                    ],
                    "outputs": [],
                    "caption": "Send Post Telemetry Numeric data to Data Platform",
                    "branches": []
                  }
                ],
                "settings": {}
              }
            ]
          },
          {
            "id": "17410862405841948",
            "name": "evt_cleanroom_humid",
            "type": {
              "name": "equipmentEvent",
              "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
              "version": "11.1.2"
            },
            "x": 890,
            "y": 150,
            "isCollapsed": false,
            "isDisabled": false,
            "settings": {
              "_autoActivate": true,
              "_customEvents": false,
              "_acceptAllEvents": false,
              "_events": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationEvent, Cmf.Foundation.BusinessObjects",
                  "Name": "Clean Room Monitor Humidity"
                }
              ],
              "_workingMode": "AlwaysActive",
              "_messageFullName": "Clean Room Monitor Humidity",
              "_automationEventProperties": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "humidity"
                }
              ],
              "_outputs": [
                {
                  "name": "humidity",
                  "propertyId": "waferprep/WPF-Humidity/#",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "String"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "humidity",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                }
              ]
            },
            "inputs": [],
            "outputs": [
              {
                "name": "topic",
                "dataType": "String",
                "value": "{{ $this.eventRawData.values[0].originalValue.topic }}"
              },
              {
                "name": "event",
                "value": "{{ $this.event }}",
                "dataType": "Any"
              },
              {
                "name": "timestamp",
                "value": "{{ $this.timestamp }}",
                "dataType": "Any"
              },
              {
                "name": "eventRawData",
                "value": "{{ $this.eventRawData }}",
                "dataType": "Any"
              },
              {
                "name": "humidity",
                "value": "{{ $this.humidity }}",
                "dataType": "Decimal"
              }
            ],
            "driver": "MQTT",
            "caption": "When equipment triggers the event {{_messageFullName}}",
            "branches": [
              {
                "name": "handler",
                "tasks": [
                  {
                    "id": "17410862405851950",
                    "name": "regex_topic_humidity",
                    "type": {
                      "name": "expressionEvaluatorRegular",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                      "version": "11.1.2"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "_evaluatorBehavior": "EvaluateAll",
                      "_clearInputs": false,
                      "_inputs": [
                        {
                          "name": "topic",
                          "valueType": "String",
                          "defaultValue": "{{ $evt_cleanroom_humid.topic }}",
                          "required": true,
                          "settingKey": "name"
                        }
                      ],
                      "_outputs": [
                        {
                          "name": "sensor",
                          "valueType": {
                            "name": "String",
                            "type": 4,
                            "collectionType": 0,
                            "referenceType": null,
                            "referenceTypeName": null,
                            "referenceTypeId": null,
                            "friendlyName": "Type"
                          },
                          "expression": "[^/]+$",
                          "settingKey": "name",
                          "__valueType": {
                            "name": "default",
                            "label": "Default value",
                            "settingKey": "defaultValue",
                            "required": true,
                            "condition": "valueType != null and valueType['name'] != null",
                            "dataTypeKey": "valueType",
                            "dataType": "String",
                            "settings": {},
                            "isMandatory": false,
                            "valueType": 4
                          }
                        }
                      ]
                    },
                    "inputs": [
                      {
                        "name": "topic",
                        "value": "{{ $evt_cleanroom_humid.topic }}",
                        "dataType": "String"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "sensor",
                        "value": "{{ $this.sensor }}",
                        "dataType": "String"
                      }
                    ],
                    "caption": "Get everything after the last /",
                    "branches": []
                  },
                  {
                    "id": "17416898426185580",
                    "name": "instance_humid",
                    "type": {
                      "name": "retrieve",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                      "version": "11.1.2"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "_outputs": [
                        {
                          "name": "instance",
                          "identifier": "instance",
                          "valueType": {
                            "collectionType": 0,
                            "type": 10,
                            "name": "Object"
                          },
                          "defaultValue": {},
                          "dataType": "Object",
                          "settingKey": "name",
                          "deviceType": null
                        }
                      ]
                    },
                    "inputs": [],
                    "outputs": [
                      {
                        "name": "instance",
                        "value": "{{ $this.instance }}",
                        "dataType": "Object"
                      }
                    ],
                    "caption": "Retrieve Instance",
                    "branches": []
                  },
                  {
                    "id": "17411115526141609",
                    "name": "postNumericTelemetry_5618",
                    "type": {
                      "name": "postNumericTelemetry",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-custom-dataplatform-tasks",
                      "version": "0.0.0"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "applicationName": "MES",
                      "retries": 30,
                      "numberOfRetries": 30,
                      "ignoreLastServiceId": false,
                      "sleepBetweenRetries": 1000
                    },
                    "inputs": [
                      {
                        "name": "instance",
                        "value": "{{ $instance_humid.instance }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "class",
                        "value": "Sensor",
                        "dataType": "String"
                      },
                      {
                        "name": "unitOfMeasure",
                        "value": "%",
                        "dataType": "String"
                      },
                      {
                        "name": "tags",
                        "value": "{{ [{\"Key\": \"Sensor Name\", \"Value\": $regex_topic_humidity.sensor }] }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "value",
                        "value": "{{ $evt_cleanroom_humid.humidity}}",
                        "dataType": "Decimal"
                      },
                      {
                        "name": "valueTimestamp",
                        "value": "{{ $evt_cleanroom_humid.timestamp }}",
                        "dataType": "DateTime"
                      },
                      {
                        "name": "parameterName",
                        "dataType": "String",
                        "value": "Humidity"
                      }
                    ],
                    "outputs": [],
                    "caption": "Send Post Telemetry Numeric data to Data Platform",
                    "branches": []
                  }
                ],
                "settings": {}
              }
            ]
          }
        ],
        "$id": "1",
        "layout": {
          "general": {
            "color": null
          },
          "drawer": {
            "tasks": {},
            "x": 0,
            "y": 73.54527793423767,
            "zoom": 0.8957951999999999,
            "fill": true
          }
        }
      },
      "Order": "2",
      "IsTemplate": "No",
      "IsShared": "No",
      "Indentation": "0",
      "WorkflowType": "ControlFlow"
    },
    "3": {
      "AutomationController": "Photolithography Cleanroom Controller [B.1]",
      "Name": "AutomationWorkflow_c708b42f-77bb-4fa0-9af9-a59b51c9944d",
      "DisplayName": "Collect Particle Data",
      "IsFile": "false",
      "Workflow": {
        "tasks": [
          {
            "id": "17413615580061007",
            "name": "evt_air_quality",
            "type": {
              "name": "equipmentEvent",
              "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
              "version": "11.1.2"
            },
            "x": 110,
            "y": 150,
            "isCollapsed": false,
            "isDisabled": false,
            "settings": {
              "_autoActivate": true,
              "_customEvents": false,
              "_acceptAllEvents": false,
              "_messageFullName": "/api/plitho/air-quality",
              "_automationEventProperties": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "device_id"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "latitude"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "longitude"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "pm2_5"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "pm10"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "co2"
                },
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects",
                  "Name": "voc"
                }
              ],
              "_outputs": [
                {
                  "name": "device_id",
                  "propertyId": "device_id",
                  "propertyType": "",
                  "property": {
                    "DataType": 0,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "String"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "device_id",
                    "type": "String",
                    "name": "String"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "latitude",
                  "propertyId": "location.latitude",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "latitude",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "longitude",
                  "propertyId": "location.longitude",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "longitude",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "pm2_5",
                  "propertyId": "readings.pm2_5",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "pm2_5",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "pm10",
                  "propertyId": "readings.pm10",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "pm10",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "co2",
                  "propertyId": "readings.co2",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "co2",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                },
                {
                  "name": "voc",
                  "propertyId": "readings.voc",
                  "propertyType": "",
                  "property": {
                    "DataType": 4,
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProperty, Cmf.Foundation.BusinessObjects"
                  },
                  "deviceType": {
                    "$type": "Cmf.Foundation.BusinessObjects.AutomationProtocolDataType, Cmf.Foundation.BusinessObjects",
                    "Name": "Decimal"
                  },
                  "valueType": {
                    "collectionType": null,
                    "friendlyName": "voc",
                    "type": "Decimal",
                    "name": "Decimal"
                  },
                  "defaultValue": "",
                  "outputType": "Value",
                  "editable": false,
                  "removable": false
                }
              ],
              "_events": [
                {
                  "$type": "Cmf.Foundation.BusinessObjects.AutomationEvent, Cmf.Foundation.BusinessObjects",
                  "Name": "Event Particles"
                }
              ]
            },
            "inputs": [],
            "outputs": [
              {
                "name": "event",
                "value": "{{ $this.event }}",
                "dataType": "Any"
              },
              {
                "name": "timestamp",
                "value": "{{ $this.timestamp }}",
                "dataType": "Any"
              },
              {
                "name": "eventRawData",
                "value": "{{ $this.eventRawData }}",
                "dataType": "Any"
              },
              {
                "name": "device_id",
                "value": "{{ $this.device_id }}",
                "dataType": "String"
              },
              {
                "name": "latitude",
                "value": "{{ $this.latitude }}",
                "dataType": "Decimal"
              },
              {
                "name": "longitude",
                "value": "{{ $this.longitude }}",
                "dataType": "Decimal"
              },
              {
                "name": "pm2_5",
                "value": "{{ $this.pm2_5 }}",
                "dataType": "Decimal"
              },
              {
                "name": "pm10",
                "value": "{{ $this.pm10 }}",
                "dataType": "Decimal"
              },
              {
                "name": "co2",
                "value": "{{ $this.co2 }}",
                "dataType": "Decimal"
              },
              {
                "name": "voc",
                "value": "{{ $this.voc }}",
                "dataType": "Decimal"
              }
            ],
            "driver": "REST",
            "caption": "When equipment triggers the event {{_messageFullName}}",
            "color": "#6ce1f9",
            "branches": [
              {
                "name": "handler",
                "tasks": [
                  {
                    "id": "17416898426185580",
                    "name": "instance_air",
                    "type": {
                      "name": "retrieve",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-core-tasks",
                      "version": "11.1.2"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "_outputs": [
                        {
                          "name": "instance",
                          "identifier": "instance",
                          "valueType": {
                            "collectionType": 0,
                            "type": 10,
                            "name": "Object"
                          },
                          "defaultValue": {},
                          "dataType": "Object",
                          "settingKey": "name",
                          "deviceType": null
                        }
                      ]
                    },
                    "inputs": [],
                    "outputs": [
                      {
                        "name": "instance",
                        "value": "{{ $this.instance }}",
                        "dataType": "Object"
                      }
                    ],
                    "caption": "Retrieve Instance",
                    "branches": []
                  },
                  {
                    "id": "17413785822094727",
                    "name": "postMultipleNumericTelemetry_9d13",
                    "type": {
                      "name": "postMultipleNumericTelemetry",
                      "package": "@criticalmanufacturing/connect-iot-controller-engine-custom-dataplatform-tasks",
                      "version": "0.0.0"
                    },
                    "isCollapsed": false,
                    "isDisabled": false,
                    "settings": {
                      "applicationName": "MES",
                      "retries": 30,
                      "numberOfRetries": 30,
                      "ignoreLastServiceId": false,
                      "sleepBetweenRetries": 1000
                    },
                    "inputs": [
                      {
                        "name": "instance",
                        "value": "{{ $instance_air.instance }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "class",
                        "value": "Sensor",
                        "dataType": "String"
                      },
                      {
                        "name": "unitsOfMeasure",
                        "value": " [\"µg/m³\",\"µg/m³\",\"ppm\",\"ppm\"]",
                        "dataType": "Object"
                      },
                      {
                        "name": "tags",
                        "value": "  {{ [{\"Key\": \"Sensor Name\", \"Value\": $evt_air_quality.device_id}, {\"Key\": \"Latitude\", \"Value\": $evt_air_quality.latitude.toString() }, {\"Key\": \"Longitude\", \"Value\": $evt_air_quality.longitude.toString() }] }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "values",
                        "value": "{{ [ $evt_air_quality.pm2_5, $evt_air_quality.pm10, $evt_air_quality.co2,$evt_air_quality.voc ] }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "valuesTimestamp",
                        "value": " {{ $evt_air_quality.timestamp }}",
                        "dataType": "Object"
                      },
                      {
                        "name": "parametersName",
                        "dataType": "Object",
                        "value": "[\"pm2.5\",\"pm10\",\"co2\",\"voc\"]"
                      }
                    ],
                    "outputs": [],
                    "caption": "Send Post Multiple Telemetry Numeric data to Data Platform",
                    "branches": []
                  }
                ],
                "settings": {}
              }
            ]
          }
        ],
        "$id": "1",
        "layout": {
          "general": {
            "color": null
          },
          "drawer": {
            "tasks": {},
            "x": 77.21584006933267,
            "y": 130.6122530053326,
            "zoom": 0.743778910593135,
            "fill": true
          }
        }
      },
      "Order": "3",
      "IsTemplate": "No",
      "IsShared": "No",
      "Indentation": "0",
      "WorkflowType": "ControlFlow"
    }
  }
}